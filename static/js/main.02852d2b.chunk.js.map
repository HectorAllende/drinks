{"version":3,"sources":["components/Header.js","context/CategoriasContext.js","context/RecetasContext.js","components/Formulario.js","context/ModalContext.js","components/Receta.js","components/ListaRecetas.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","CategoriasContext","createContext","CategoriasProvider","props","useState","categorias","guardarCategorias","useEffect","a","axios","get","data","drinks","obtenerCategorias","Provider","value","children","RecetasContext","RecetasProvider","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","url","resultado","obtenerRecetas","Formulario","useContext","guardarBusqueda","obtenerDatosReceta","e","target","name","onSubmit","preventDefault","type","placeholder","onChange","map","key","strCategory","ModalContext","ModalProvider","idreceta","guardarIdReceta","informacion","guardarReceta","obtenerRecetaApi","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Receta","receta","classes","modalStyle","open","setOpen","console","log","strDrink","src","strDrinkThumb","alt","onClick","idDrink","Modal","onClose","aria-labelledby","aria-describedby","style","strInstructions","ingredientes","i","push","mostrarIngredientes","ListaRecetas","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.02852d2b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n    return ( \r\n        <header className=\"bg-alert\">\r\n            <h1>Toma Conmigo</h1>\r\n        </header>\r\n\r\n     );\r\n}\r\n \r\nexport default Header;","import React, { createContext, useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n// Crear el context\r\nexport const CategoriasContext = createContext();\r\n\r\n// Provider es donde se encuentran las funciones y state\r\n\r\nconst CategoriasProvider = (props) =>{\r\n\r\n    // crear el state del Context\r\n    const [categorias, guardarCategorias] = useState([])\r\n\r\n    // ejecutar el llamado a la api\r\n\r\n    useEffect(() => {\r\n        const obtenerCategorias = async ()=>{\r\n            const url='https://www.thecocktaildb.com/api/json/v1/1/list.php?c=list';\r\n\r\n            const categorias = await axios.get(url)\r\n            // console.log(categorias.data.drinks)\r\n            guardarCategorias(categorias.data.drinks)\r\n\r\n        }\r\n        obtenerCategorias();\r\n\r\n    }, [])\r\n    \r\n\r\n    return (\r\n\r\n        <CategoriasContext.Provider\r\n            value={{\r\n                categorias,\r\n                \r\n            }}\r\n        >\r\n            {props.children}\r\n\r\n        </CategoriasContext.Provider>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default CategoriasProvider;\r\n\r\n","import React, { createContext, useEffect, useState } from 'react';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const RecetasContext = createContext();\r\n\r\nconst RecetasProvider = (props) => {\r\n\r\n    const [recetas, guardarRecetas] = useState([])\r\n    const [busqueda, buscarRecetas] = useState({\r\n        nombre:'',\r\n        categoria:''\r\n    });\r\n\r\n    const [consultar, guardarConsultar] = useState(false)\r\n\r\n    const {nombre, categoria}= busqueda;\r\n\r\n    useEffect(() => {\r\n\r\n        if (consultar) {\r\n            const obtenerRecetas = async () => {\r\n\r\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`\r\n\r\n                const resultado = await axios.get(url)\r\n                // console.log(resultado.data.drinks)\r\n                guardarRecetas(resultado.data.drinks)\r\n\r\n            }\r\n\r\n            obtenerRecetas();\r\n        }\r\n\r\n    }, [busqueda])\r\n\r\n    return ( \r\n\r\n        <RecetasContext.Provider\r\n            value={{\r\n                recetas,\r\n                buscarRecetas,\r\n                guardarConsultar\r\n            }}\r\n        >\r\n            {props.children}\r\n        </RecetasContext.Provider>\r\n     );\r\n}\r\n \r\nexport default RecetasProvider;\r\n","import React, {useContext, useState} from 'react';\r\nimport {CategoriasContext} from '../context/CategoriasContext'\r\nimport {RecetasContext} from '../context/RecetasContext'\r\n\r\nconst Formulario = () => {\r\n\r\n    const {categorias} = useContext(CategoriasContext)\r\n    const {buscarRecetas, guardarConsultar} = useContext(RecetasContext)\r\n   \r\n    const [busqueda, guardarBusqueda]= useState({\r\n        nombre: '',\r\n        categoria:''\r\n    })\r\n    \r\n\r\n  \r\n    // funcion para leer los contenidos\r\n\r\n    const obtenerDatosReceta= e =>{\r\n        guardarBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return ( \r\n      <form\r\n        className=\"col-12\"\r\n        onSubmit={e=>{\r\n            e.preventDefault();\r\n            buscarRecetas(busqueda)\r\n            guardarConsultar(true)\r\n        }}\r\n      >\r\n          <fieldset className=\"text-center\">\r\n                <legend>Busca Tragos por categoría/Ingredientes</legend>\r\n          </fieldset>\r\n\r\n        <div className=\"row mt-4\">\r\n            <div className=\"col-md-4\">\r\n                <input\r\n                    name=\"nombre\"\r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Buscar por ingrediente: ej. Vodka\"\r\n                    onChange={obtenerDatosReceta}\r\n                />\r\n            </div> \r\n            <div className=\"col-md-4\"> \r\n                <select\r\n                    className=\"form-control\"\r\n                    name=\"categoria\"\r\n                    onChange={obtenerDatosReceta}\r\n                >\r\n                    <option value=\"\">--Seleccione categoría--</option>\r\n                        {categorias.map(categoria => (\r\n                            <option key={categoria.strCategory}\r\n                                value={categoria.strCategory}\r\n                            >{categoria.strCategory}</option>\r\n                        ))}                  \r\n                </select>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-block btn-primary\" \r\n                    value=\"Buscar tragos\"               \r\n                />\r\n\r\n            </div>\r\n\r\n        </div>\r\n      </form>\r\n\r\n     );\r\n}\r\n \r\nexport default Formulario;","import React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\n\r\nexport const ModalContext = createContext();\r\n\r\n\r\nconst ModalProvider  = (props) => {\r\n\r\n    const [idreceta, guardarIdReceta]= useState(null)\r\n    const [informacion, guardarReceta]= useState({ })\r\n\r\n    useEffect(() => {\r\n     \r\n        const obtenerRecetaApi= async ()=>{\r\n            if(!idreceta) return;\r\n\r\n            const url = `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${idreceta}`\r\n\r\n            const resultado = await axios.get(url)\r\n            guardarReceta(resultado.data.drinks[0])\r\n\r\n        } \r\n        obtenerRecetaApi()\r\n\r\n    }, [idreceta])\r\n\r\n    return ( \r\n        <ModalContext.Provider\r\n            value={{\r\n                informacion,\r\n                guardarIdReceta,\r\n                guardarReceta\r\n            }}\r\n        >\r\n\r\n\r\n            {props.children}\r\n        </ModalContext.Provider>\r\n\r\n     );\r\n}\r\n \r\nexport default ModalProvider ;\r\n","import React, {useContext, useState} from 'react';\r\nimport {ModalContext} from '../context/ModalContext'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: 'absolute',\r\n      width: 300,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: '2px solid #000',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n  \r\n\r\nconst Receta = ({receta}) => {\r\n\r\n    // Configuarcion del modal de material-ui\r\n\r\n    const classes = useStyles();\r\n    \r\n    const [modalStyle] = useState(getModalStyle);\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const handleOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    }\r\n\r\n    const {informacion, guardarIdReceta, guardarReceta}= useContext(ModalContext)\r\n    console.log(informacion)\r\n\r\n    const mostrarIngredientes = informacion =>{\r\n        let ingredientes = [];\r\n\r\n        for (let i= 1; i<16; i++){\r\n\r\n            if(informacion[`strIngredient${i}`]){\r\n                ingredientes.push(\r\n                    <li>\r\n                        <li>{informacion[`strIngredient${i}`]} {informacion[`strMeasure${i}`]}</li>\r\n\r\n                    </li>\r\n                )\r\n            }\r\n        }\r\n        return ingredientes;\r\n\r\n    }\r\n\r\n    return ( \r\n\r\n        <div className=\"col-md-4 mb-3\">\r\n            <div className=\"card\">\r\n                 <h2 className=\"card-header\">{receta.strDrink}</h2>\r\n\r\n                 <img className=\"card-img-top\" src={receta.strDrinkThumb} alt={`Imagen de ${receta.strDrink}`}/>\r\n                <div className=\"card-body\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-block btn-primary\"\r\n                        onClick={()=>{\r\n                            guardarIdReceta(receta.idDrink)\r\n                            handleOpen()\r\n                        }}\r\n                    >\r\n                        Ver Receta\r\n                    </button>\r\n\r\n                    <Modal\r\n                        open={open}\r\n                        onClose={()=>{\r\n                            guardarIdReceta(null);\r\n                            handleClose();\r\n                            guardarReceta({});\r\n                        }}\r\n                        aria-labelledby=\"simple-modal-title\"\r\n                        aria-describedby=\"simple-modal-description\"\r\n\r\n                    >\r\n                        <div style={modalStyle} className={classes.paper}>\r\n                            <h2>{informacion.strDrink}</h2>\r\n                            <h3 className=\"mt-4\">Instrucciones</h3>\r\n                            <p>{informacion.strInstructions}</p>\r\n\r\n                            <img className=\"img-fluid my-4\" src={informacion.strDrinkThumb}/>\r\n                            <h3>Ingredientes y cantidades</h3>\r\n\r\n                            <ul>\r\n                                {mostrarIngredientes(informacion)}\r\n                            </ul>\r\n\r\n                        </div>\r\n\r\n                    </Modal>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n       \r\n     );\r\n}\r\n \r\nexport default Receta;","import React, {useContext} from 'react';\r\nimport Receta from './Receta';\r\nimport {RecetasContext} from '../context/RecetasContext'\r\n\r\n\r\n\r\nconst ListaRecetas = () => {\r\n\r\n    const {recetas}= useContext(RecetasContext)\r\n   \r\n    return ( \r\n        <div className=\"row mt-5\">\r\n            {recetas.map(receta=>(\r\n                <Receta\r\n                    key={receta.idDrink}\r\n                    receta={receta}\r\n\r\n                />\r\n            ))}\r\n\r\n\r\n        </div>\r\n        \r\n    \r\n    );\r\n}\r\n \r\nexport default ListaRecetas;","import React from 'react';\nimport Header from './components/Header';\nimport Formulario from './components/Formulario';\nimport ListaRecetas from './components/ListaRecetas'\n\nimport CategoriasProvider from './context/CategoriasContext';\nimport RecetasProvider from './context/RecetasContext'\nimport ModalProvider from './context/ModalContext'\n\nfunction App() {\n  return (\n    <CategoriasProvider>\n      <RecetasProvider>\n        <ModalProvider>\n\n          <Header />\n\n          <div className=\"container mt-5\">\n            <div className=\"row\">\n              <Formulario />\n\n            </div>\n            <ListaRecetas />\n\n          </div>\n        </ModalProvider>\n      </RecetasProvider>\n    </CategoriasProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}